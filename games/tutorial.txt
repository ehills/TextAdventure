/* A tutorial to make a game using Diff */

/* Use these variables to change in-game words. They are optional. */
gameName = "*****Tutorial*****";             // Set your game's name.
gameCredits = "By Game Dev";                 // Set your game's credits.
defaultResponse = "You do not know how to";  // Set your response if a user command is unknown.
defaultInventoryName = "Inventory: ";        // Set the name of your inventory.
defaultInteractiveName = "Objects: ";        // Set the word to be used for interactive objects.
defaultNoObjects = "None";                   // Set phrase to be used if no item in a location.
saveGame = "save";                           // Set word to be used to save a game.
gameSavedMessage = "Game saved";             // Set message when a game is saved.
saveGameMessage = "Save game to which slot? 0-9.";  // Set message to save game to slots 0-9.
restoreGameMessage = "Load game from which slot? 0-9."; // Set message to load game from slot 0-9.
restoreGameChoice = "Load Game";                        // Set message used to restore a game.
newGameChoice = "Start New Game";                       // Set message used to start a new game.

/* Create your player. A player has to be created for the game to work. */
Player player { 
    carryLimit = 10; // Sets how many items a player can hold.
}

/* Create Verbs that work for all items in the game. For 2 or 4 word user commands. */
ItemDefaults {
    
    /* Examine an item, user command = 'x item'*/
    Verb "examine or x or ex or look or l" {
        print inputItem getDescription; // Use inputItem to refer to the item the verb is referring to
    }
    
	
	/* Pick up an item, user command = 'get item' */
	Verb "pickup or pick-up or get" {
		if (inputItem hasAttribute canPickup) {
			if (player hasItem inputItem) {
	            print "You already have the inputItem.";
	        } else {
	         	if (player canCarry) {
	                inputItem setLocation player;
					print "You pickup the inputItem.";
	            } else {
	                print "You are carrying too much already.";
                }
            }
        } else {
        	print "You cannot pick up the inputItem what were you thinking...";
        }
    }
    
    /* Drop an item, user command = 'drop item' */
    Verb "drop or discard or throwout or throw-out" {
        if (player hasItem inputItem) {
            inputItem setLocation currentLocation;
			print "You drop the inputItem.";
        } else {
            print "You do not have a inputItem.";
        }
    }
    
    /* 4 word user command to put items in a desk if the item has the attribute putdesk and the desk is open */
	/* user command = 'put item into desk' */
    Verb "put or place Join: into or in or inside Item: desk" {
		if(inputItem hasAttribute putDesk) {
				if(inputItem inLocation player) {
					if(desk hasAttribute isOpen) {
						inputItem setLocation desk;
						print "You put the inputItem into the desk.";
					} else {
						print "You cannot do that the desk is closed.";
					}
				} else {
					print "You do not have the inputItem.";
				}
		} else {
			print "You cannot put the inputItem in the desk.";
		}
	}
}

/* Create global 1 word user commands */

LocationDefaults {
	
	/* Show inventory, user command = 'i' */
	Verb "i or inventory or invent or inv" {
		describeInventory;
	}
    
 	/* Describe current location and list items, user command = 'l' */
    Verb "look or l" {
          	describe;
			list;
    }
    
	/* Quit game, user command = 'q' */
	Verb "quit or q or exit" {
    	print "Bye bye thanks for playing!!!";
    	gameOver;
    }   
    
    /* Set directions */
	/* go north, user command = 'n' */
    Verb "north or n or nth" {
    	if(player inLocation hasNorth) {
    		player setLocation toNorth;
    		describe;
			list;
    	} else {
    		print "You cannot go north.";
    	}
    }
	/* go south, user command = 's' */
    Verb "south or s or sth" {
       	if(player inLocation hasSouth) {
    		player setLocation toSouth;
    		describe;
			list;
    	} else {
    		print "You cannot go south.";
    	}
    }
	/* go east, user command = 'e' */
    Verb "east or e" {
    	if(player inLocation hasEast) {
    		player setLocation toEast;
    		describe;
			list;
    	} else {
    		print "You cannot go east.";
    	}
    }
	/* go west, user command = 'w' */
    Verb "west or w" {
    	if(player inLocation hasWest) {
    		player setLocation toWest;
    		describe;
			list;
    	} else {
    		print "You cannot go west.";
    	}
    }
}

initialLocation = lab; // Sets the starting location of the game.

initialDescription = "Hi welcome to the tutorial."; // Sets the introduction of the game.

/* All locations require a name and description. Exits are optional. */

/* The start location of the game */
Location lab {
    name = "lab";
    description = "Place to learn. \nThings to do: \n1) type 'pickup key' \n2) type 'use key' to unlock desk \n3) type 'open desk' \n4) type 'put key into desk'\n5) type 'close desk' \n6) type 'burn paper with lighter' \n7) type 'i' to see the ash in your inventory \n8) type 'q' to quit";
}

/* Place to store items not currently being used */
Location deadSpace {
    name = "deadSpace";
    description = "Dead space.";
}

/* Create Items in the game and their 2 and 4 word user command Verbs. */

/* Create an item key that can be picked up and put into the desk. If used it unlocks the desk */
Item key {
	name = "key";
	description = "A small key.";
	location = lab;
	hasAttributes = canPickup putDesk;
	
	/* user command = 'use key' */
	Verb "use" {
		if(desk hasAttribute isLocked) {
			if(player inLocation lab) {
				print "You struggle to turn the key in the old desk but manage to unlock it.";
				desk setAttribute !isLocked;
			} else {
				print "You can not use the key here.";
			}
		} else {
				print "The desk is already unlocked.";
		}
	}
}

/* Create an item desk that is closed and locked. Items inside are hidden from view initially. */
Item desk {
	name = "desk";
	description = "A large wooden desk.";
	location = lab;
	hasAttributes = !isOpen isLocked;
	hideItems;
	
	/* When the desk is opened it shows the items inside */
	/* user command = 'open desk' */
	Verb "open" { 
		if (desk hasAttribute !isLocked) {
			if (desk hasAttribute !isOpen) {
				desk showItems;
				desk setAttribute isOpen;
				print "You open the desk and find... ";
				desk list;
			} else {
				print "The desk is already open.";
			}
		} else {
			print "The desk is locked.";
		}
	}
	
	/* When the desk is closed it hides the items */
	/* user command = 'close desk' */
	Verb "close or shut" {
		if(desk hasAttribute isOpen) {
			desk hideItems;
			desk setAttribute !isOpen;
			print "You close the desk.";
		} else {
			print "The desk is already closed.";
		}
	}
}

/* Create item lighter that when used with paper will burn it */
Item lighter {
	name = "lighter";
	description = "A lighter to burn stuff with.";
	location = player;
}

/* This is the item that will be produced when the paper is burned */
Item ash {
	name = "ash";
	description = "pile of ash";
	location = deadSpace;
}

/* When the paper is burnt using the 4 word command 'burn paper with lighter' it will produce ash */
Item paper {
	name = "paper";
	description = "burn me.";
	location = player;
	
	/* user command = 'burn paper with lighter */
	Verb "use or burn Join: with Item: lighter" {
		if (paper inLocation player ) {
			if (lighter inLocation player) {
				print "You burn the paper and get a pile of ash.";
				paper setLocation deadSpace;
				ash setLocation player;
			} else {
				print "You don't have the lighter.";
			}
		} else {
			print "You don't have the paper.";
		}
	}
}

